<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <!--使用注解的方式向IOC容器中注册bean,在当前类的上面添加注解标识
        @Component：组件，可以在任意的类上进行添加，在扫描的时候都会完成bean的注册
        @Controller：放置在控制层，用来接受用户的请求
        @Service：放置在业务逻辑层，
        @Repository：放置在数据访问层

        使用注解的时候，还需要告诉spring应该从哪个包开始扫描,一般在定义的时候都写上相同包的路径
        需要导入context命名空间

        在使用注解的时候没有定义id和class，那么如何根据id来进行识别？
        默认是把当前类的名称的首字母小写之后作为id，如果需要改变名称，那么需要在注解添加参数值value来完成修改名字的目的。

        @Scope注解可以声明当前类是单例还是多例
    -->
    <context:component-scan base-package="spring.annotation.com.chencan">
        <!--当定义好注解的扫描路径之后，可以做更细粒度的控制，可以选择扫描哪个注解，也可以选择不扫描哪个注解
       include-filter:表示要包含扫描的注解,一般不会定义此规则，但是如果引入的第三方包中包含注解，此时就需要使用此标签来进行标识。
       exclude-filter:表示要排除扫描的注解，使用较多

       type:规则的类型
       expression：表达式

       assignable:可以指定对应的类的名称。但是表达式必须是完全限定名
       annotation:按照注解来进行排序，但是表达式中必须是注解的完全限定名
       regex:使用正则表达式的方式，一般不用
       aspectj:使用切面的方式，一般不用
       custom:使用自定义的方式，可以自己定义自己的筛选规则，一般不用-->

        <!--<context:include-filter type="assignable" expression="PersonService"/>-->
        <!--<context:exclude-filter type="assignable" expression="PersonController"/>-->

   </context:component-scan>
</beans>